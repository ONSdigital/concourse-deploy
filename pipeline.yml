---
resource_types:
  - name: pull-request
    type: docker-image
    source:
      repository: teliaoss/github-pr-resource

resources:
  - name: repository
    type: pull-request
    check_every: 24h
    webhook_token: ((webhook_token-concourse))
    source:
      repository: ONSdigital/es-concourse-deploy
      access_token: ((git_access_token))

#  - name: GIT-repository
#    type: git
#    source:
#      uri: https://github.com/ONSdigital/concourse-deploy
#      branch: parallel
#    webhook_token: temptest

jobs:
  - name: linting-and-tests
    serial: true
    plan:

      - get: repository
        trigger: true
        version: every

      - put: repository
        params:
          path: repository
          status: pending

      - in_parallel:
        - task: aws-tests
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: ((docker-username))/docker-concourse
            inputs:
              - name: repository
            run:
              path: repository/aws-test.sh
          on_failure:
            put: repository
            params:
              path: repository
              status: failure

        - task: flake8
          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: ((docker-username))/docker-concourse
            inputs:
              - name: repository
            run:
              path: repository/flake8.sh
          on_failure:
            put: repository
            params:
              path: repository
              status: failure

  - name: serverless-deploy
    plan:
      - get: repository
        trigger: true
        passed: [linting-and-tests]
      - task: serverless-aws
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ((docker-username))/docker-concourse
          params:
            AWS_ACCESS_KEY_ID: ((serverless-access-key.AWS_ACCESS_KEY_ID))
            AWS_SECRET_ACCESS_KEY: ((serverless-access-key.AWS_SECRET_ACCESS_KEY))
            SLS_DEBUG: 1
          inputs:
            - name: repository
          run:
            path: repository/serverless.sh
